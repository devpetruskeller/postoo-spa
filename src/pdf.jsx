import jsPDF from 'jspdf'
import autoTable from 'jspdf-autotable'


export function buildAndDownloadPDF({ docType, business, client, notes, lines }) {
const doc = new jsPDF({ unit: 'pt', format: 'a4' })
const marginX = 40
let y = 56


// Header
doc.setFont('helvetica', 'bold')
doc.setFontSize(20)
doc.text(`${docType || 'Document'}`, marginX, y)


doc.setFontSize(11)
doc.setFont('helvetica', 'normal')
y += 22
const date = new Date().toLocaleDateString('en-GB', { day:'2-digit', month:'long', year:'numeric' })
doc.text(`Date: ${date}`, marginX, y)


// Parties
y += 28
doc.setFont('helvetica', 'bold')
doc.text('From', marginX, y)
doc.setFont('helvetica', 'normal')
y += 16
doc.text([business.name, business.mobile || '', business.email || ''].filter(Boolean), marginX, y)


y += 48
doc.setFont('helvetica', 'bold')
doc.text('To', marginX, y)
doc.setFont('helvetica', 'normal')
y += 16
doc.text([client.name, client.mobile || '', client.email || ''].filter(Boolean), marginX, y)


// Line items table
const rows = (lines || []).map((l) => {
const qty = Number(l.qty || 1)
const price = Number(l.price || 0)
const total = +(qty * price).toFixed(2)
return [String(l.desc || ''), qty, price.toFixed(2), total.toFixed(2)]
})


autoTable(doc, {
startY: y + 32,
head: [['Description', 'Qty', 'Unit', 'Total']],
body: rows,
styles: { font: 'helvetica', fontSize: 11 },
headStyles: { fillColor: [10, 132, 255] },
theme: 'striped',
margin: { left: marginX, right: marginX }
})


// Totals
const tableHeight = doc.lastAutoTable?.finalY || (y + 32)
const grand = rows.reduce((s, r) => s + Number(r[3]), 0).toFixed(2)
doc.setFont('helvetica', 'bold')
doc.text(`Grand Total: ${grand}`, marginX, tableHeight + 24)


// Notes
if (notes && notes.trim()) {
doc.setFont('helvetica', 'bold')
doc.text('Notes', marginX, tableHeight + 56)
doc.setFont('helvetica', 'normal')
const split = doc.splitTextToSize(notes, 515)
doc.text(split, marginX, tableHeight + 72)
}


// Footer
doc.setFont('helvetica', 'normal')
doc.setFontSize(9)
doc.text('Generated by PosToo PWA', marginX, 812)


doc.save(`${(docType || 'document').toLowerCase()}_${Date.now()}.pdf`)
}